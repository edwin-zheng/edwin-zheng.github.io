---
layout: essay
type: essay
title: Where do your (Coding) Standards Lie
# All dates must be YYYY-MM-DD format!
date: 2020-02-13
labels:
  - ESLint
  - Coding Standards
  - IntelliJ
---

I, on the other hand, think that if you can only implement one software engineering technique to improve quality, 
it should be coding standards. 
Indeed, I believe some coding standards can actually help you learn a programming language. Do you agree?
After your first week of using ESLint with IntelliJ, what are your impressions? 
Are you finding that getting the green checkmark is painful, or useful, or both, or something else entirely?

<h2>The Guiding Path</h2>

Coding standards can do more than just provide groundwork for people to format their code in order to perpetuate readability and a uniform coding. There is an advantage to following a standard, and that advantage is the possibility of learning more about the code written. One key thing is learning how to properly use functions provided by the language, as people tend to misuse native functions or framework functions. However, a coding standard may show a person how to properly format a particular setup, which could reveal the proper use of a method or introduce a new way to write certain lines of code. An example of this would be arrow functions in ES6 Javascript, where if the intended return value from an arrow function is simple enough, ESLint will strongly urge the coder to format the arrow function in a specific way, which may reveal a completely new way to format arrow functions to a up and coming coder. 

<h2>Intellijent use of ESLint</h2>

ESLint is an interesting coding standard that has surprised me with how far the ESLint tool in IntelliJ will go to format code. The ability for ESLint to pick up formatting errors in seemingly detailed lines of code is impressive, and the features packed into the ESLint tool to auto fix these errors is just as impressive. Obtaining the green checkmark from ESLint in Intellij can be a pain sometimes, but this is helpful, as this forces a coder to go back through their code to investigate why that particular line violates the standard, which will help the coder in the future to catch more than just formatting errors when quickly reviewing code they wrote. However, the feeling of accomplishment when writing working code and seeing the green checkmark in the upper right corner of IntelliJ is worth the struggle of trying to conform the the standards of ESLint
